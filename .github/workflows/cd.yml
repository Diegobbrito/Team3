name: CD - Push Docker Image and Deploy to OpenShift

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate with Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./backend/personal-date
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/hackaton-team-3:latest
            ${{ secrets.DOCKER_USERNAME }}/hackaton-team-3:v${{ github.run_number }}

  deploy-ocp:
    runs-on: ubuntu-latest
    needs: push-docker-image
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install OpenShift CLI
        run: |
          curl -sL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz | tar xz
          sudo mv oc kubectl /usr/local/bin/
          oc version

      - name: Login to OpenShift Cluster
        run: |
          oc login --token=${{ secrets.OCP_TOKEN }} \
                   --server=${{ secrets.OCP_SERVER }} \
                   --insecure-skip-tls-verify=true

      - name: Set image in deployment
        working-directory: ./backend/personal-date/k8s
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/hackaton-team-3:v${{ github.run_number }}"
          echo "Updating deployment with image: $IMAGE_NAME"
          sed -i 's|image: .*|image: '"$IMAGE_NAME"'|' deployment.yaml

      - name: Apply Kubernetes deployment
        working-directory: ./backend/personal-date/k8s
        run: oc apply -f deployment.yaml

      - name: Verify deployment rollout
        working-directory: ./backend/personal-date/k8s
        run: oc rollout status deployment/meet --timeout=120s

      - name: Verify pods status
        working-directory: ./backend/personal-date/k8s
        run: |
          echo "Current pod status:"
          oc get pods -l app=meet
          echo "Pod details:"
          oc describe pods -l app=meet